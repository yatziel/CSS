/* 

  Position

  Es la propiedad que nos permite POSICIONAR los elementos del html.

  Conceptos Importantes:

    1. Flujo de Renderizado: Los elementos en html se dibujan de izquierda a derecha y de arriba hacia abajo.

    2. Espacio Reservado: Es el espacio que tiene un elemento asignado en el navegador.

    3. Elemento Posicionado: Es cuando su propiedad "position" tiene un valor distinto a "static", que es el valor por default.

    4. Stacking Context: Contexto de Apilamiento. Es el orden en el que se superponen o apilan los elementos en el html.

  
  Al posicionar un elemento se habilidan 5 propiedades que podemos usar para mover el elemento en 3 ejes. (x, y, z)

    top     -> Moverá el elemento desde la parte superior.
    rigth   -> Moverá el elemento desde la parte derecha.
    bottom  -> Moverá el elemento desde la parte inferior.
    left    -> Moverá el elemento desde la parte izquierda.
  
  * Los elementos tienen su punto de origen (0,0) en la esquina superior izquierda.
  * La distancia a moverse se indica en px y acepta valores negativos.
  * Si a un elemento le declaramos la propiedad top, bottom deja de funcionar.
  * Si a un elemento le declaramos la propiedad left, rigth deja de funcionar.

    z-index -> Nos permite mover el elemento en el contexto de apilamiento. (eje z). Recibe valores en número o índices, sin unidad. Puede recibir valores negativos.

  
  Los posibles valores que "position" recibe son:

    static    -> Es el valor por default de los elementos. Con este valor el elemento NO ESTÁ POSICIONADO y no podemos moverlo.

    relative  -> El elemento mantiene su posición y medidas en el flujo de redenrizado. Mantendrá su espacio reservado. Si lo movemos usará su contenedor como referencia.

    absolute  -> El elemento perderá sus medidas y su espacio reservado. Si movemos el elemento lo hara en función de su contenedor posicionado y si no tiene alguno, lo hará en función del elemento html.

    fixed     -> El elemento pederá sus medidas y su espacio reservado. Si lo movemos usará el elemento html como referencia y quedará fijo en esa posición aunque hagamos scroll.

    sticky    -> Es una mezcla de "relative" y fixed". Con este valor, las propiedades top, rigth, bottom y left, no sirven para mover el elemento. Si no para indicarle en qué punto pasará a tener un comportamiento similar a fixed.

*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: sans-serif;
  color: whitesmoke;
  background-color: darkslateblue;
}

.container {
  margin: 0 auto;
  width: 300px;
  height: 300px;
  background-color: lightblue;
}

.box {
  width: 100px;
  height: 100px;
}

.box-1 {
  position: relative;
  /* top: -20px; */
  /* left: -20px; */
  right: -20px;
  bottom: -20px;
  z-index: 20;
  background-color: lightcoral;
}

.box-2 {
  position: relative;
  left: 50px;
  top: -25px;
  z-index: 10;
  background-color: lightgreen;
}

.box-3 {
  position: absolute;
  /*  right: 0;
  bottom: 0; */
  top: 100px;
  left: 200px;
  z-index: 15;
  background-color: lightseagreen;
}

.box-4 {
  width: 100%;
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 40;
  background-color: lightcoral;
}

nav {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 20;
  width: 100%;
  height: 50px;
  text-align: center;
  background-color: lightcoral;
}

nav a {
  font-size: 18px;
  display: inline-block;
  padding: 12px 8px;
  text-decoration: none;
  color: white;
}

nav a:hover {
  text-decoration: underline;
}

.button {
  position: fixed;
  right: 20px;
  bottom: 20px;
  z-index: 10;
  width: 100px;
  height: 100px;
  font-size: 48px;
  text-align: center;
  padding-top: 18px;
  border-radius: 50%;
  background-color: lightgreen;
  cursor: pointer;
}

.button:hover {
  background-color: darkgreen;
}

main {
  width: 100%;
  max-width: 960px;
  margin: 0 auto;
  padding-top: 50px;
  background-color: darkblue;
}

main section {
  padding: 0 24px;
}

section h2 {
  position: sticky;
  top: 50px;
  font-size: 34px;
  background-color: darkgoldenrod;
}

section p {
  font-size: 24px;
  line-height: 1.5;
  margin-bottom: 24px;
}


/* Commit: "Position: Relative, Absolute, Fixed y Sticky" */